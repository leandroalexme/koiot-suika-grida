{
  "version": 3,
  "sources": ["../src/array_util.ts", "../src/color.ts", "../src/common.ts", "../src/event_emitter.ts", "../src/lodash.ts"],
  "sourcesContent": ["// Array method without call this, so it will faster.\n\n/**\n * forEach\n */\nexport const forEach = <T>(\n  array: T[],\n  cb: (item: T, index: number) => void,\n) => {\n  for (let i = 0, len = array.length; i < len; i++) {\n    cb(array[i], i);\n  }\n};\n\nexport const arrMap = <T, U>(\n  array: T[],\n  cb: (item: T, index: number) => U,\n): U[] => {\n  const ret: U[] = [];\n  for (let i = 0, len = array.length; i < len; i++) {\n    ret.push(cb(array[i], i));\n  }\n  return ret;\n};\n\n/**\n * map with revert\n */\nexport const arrMapRevert = <T, U>(\n  array: T[],\n  cb: (item: T, index: number) => U,\n): U[] => {\n  const ret: U[] = [];\n  for (let i = array.length - 1; i >= 0; i--) {\n    ret.push(cb(array[i], i));\n  }\n  return ret;\n};\n\nexport const arrEvery = <T>(\n  array: T[],\n  cb: (item: T, index: number) => unknown,\n): boolean => {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (!cb(array[i], i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const swap = <T>(arr: T[], i: number, j: number) => {\n  const tmp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = tmp;\n};\n", "interface IRGB {\n  r: number;\n  g: number;\n  b: number;\n}\n\ninterface IRGBA extends IRGB {\n  a: number;\n}\n\nexport const parseRGBAStr = ({ r, g, b, a }: IRGBA) => {\n  return `rgba(${r},${g},${b},${a})`;\n};\n\nexport const parseRGBStr = ({\n  r,\n  g,\n  b,\n}: {\n  r: number;\n  g: number;\n  b: number;\n}) => {\n  return `rgb(${r},${g},${b})`;\n};\n/**\n * normalize hex to `RRGGBB` string format\n *\n * reference: https://mp.weixin.qq.com/s/RWlsT-5wPTD7-OpMiVhqiA\n */\nexport const normalizeHex = (hex: string) => {\n  hex = hex.toUpperCase();\n  const match = hex.match(/[0-9A-F]{1,6}/);\n  if (!match) {\n    return '';\n  }\n  hex = match[0];\n\n  if (hex.length === 6) {\n    return hex;\n  }\n  if (hex.length === 4 || hex.length === 5) {\n    hex = hex.slice(0, 3);\n  }\n  // ABC -> AABBCC\n  if (hex.length === 3) {\n    return hex\n      .split('')\n      .map((c) => c + c)\n      .join('');\n  }\n  // AB => ABABAB\n  // A -> AAAAAA\n  return hex.padEnd(6, hex);\n};\n\nexport const parseRGBToHex = (rgb: { r: number; g: number; b: number }) => {\n  const { r, g, b } = rgb;\n  const hex = (r << 16) | (g << 8) | b;\n  return hex.toString(16).toUpperCase().padStart(6, '0');\n};\n/**\n * parse hex to rgb\n * e.g. #FF0000 -> { r: 255, g: 0, b: 0 }\n */\nexport const parseHexToRGB = (hex: string): IRGB | null => {\n  hex = normalizeHex(hex);\n  if (!hex) {\n    return null;\n  }\n  const r = parseInt(hex.slice(0, 2), 16);\n  const g = parseInt(hex.slice(2, 4), 16);\n  const b = parseInt(hex.slice(4, 6), 16);\n  return { r, g, b };\n};\n\n/**\n * parse hex to rgba\n * e.g. #FF0000FF -> { r: 255, g: 0, b: 0, a: 1 }\n */\nexport const parseHexToRGBA = (hex: string): IRGBA | null => {\n  hex = normalizeHex(hex);\n  if (!hex) {\n    return null;\n  }\n  const r = parseInt(hex.slice(0, 2), 16);\n  const g = parseInt(hex.slice(2, 4), 16);\n  const b = parseInt(hex.slice(4, 6), 16);\n  const aStr = hex.slice(6, 8);\n  const a = aStr ? parseInt(aStr, 16) / 255 : 1;\n  return { r, g, b, a };\n};\n", "import { v4 as uuidv4 } from 'uuid';\n\nexport const noop = () => {\n  // do nothing\n};\n\n/**\n * \u751F\u6210\u552F\u4E00 ID\n */\nexport const genUuid = () => {\n  return uuidv4();\n};\n\nexport const increaseIdGenerator = () => {\n  let count = 0;\n  return () => {\n    const id = String(count);\n    count++;\n    return id;\n  };\n};\n\nexport const objectNameGenerator = {\n  maxIdxMap: new Map<string, number>(),\n  gen(type: string) {\n    let idx = this.maxIdxMap.get(type) ?? 0;\n    idx++;\n    this.maxIdxMap.set(type, idx);\n    return `${type} ${idx}`;\n  },\n  setMaxIdx(objectName: string) {\n    const match = objectName.match(/^(.*)\\s+(\\d+)$/);\n    if (match) {\n      const [, type, idxStr] = match;\n      const idx = Number(idxStr);\n      this.maxIdxMap.set(type, Math.max(this.maxIdxMap.get(type) ?? 0, idx));\n    }\n  },\n};\n\n/**\n * \u627E\u51FA\u79BB value \u6700\u8FD1\u7684 segment \u7684\u500D\u6570\u503C\n */\nexport const getClosestTimesVal = (value: number, segment: number) => {\n  const n = Math.floor(value / segment);\n  const left = segment * n;\n  const right = segment * (n + 1);\n  return value - left <= right - value ? left : right;\n};\n\nexport const viewportCoordsToSceneUtil = (\n  x: number,\n  y: number,\n  zoom: number,\n  scrollX: number,\n  scrollY: number,\n  /**\n   * \u662F\u5426\u56DB\u820D\u4E94\u5165\u53D6\u6574\n   */\n  round = false,\n) => {\n  let newX = scrollX + x / zoom;\n  let newY = scrollY + y / zoom;\n  if (round) {\n    newX = Math.round(newX);\n    newY = Math.round(newY);\n  }\n  return {\n    x: newX,\n    y: newY,\n  };\n};\n\nexport const sceneCoordsToViewportUtil = (\n  x: number,\n  y: number,\n  zoom: number,\n  scrollX: number,\n  scrollY: number,\n) => {\n  return {\n    x: (x - scrollX) * zoom,\n    y: (y - scrollY) * zoom,\n  };\n};\n\n/**\n * Canvas \u4E2D\u7ED8\u5236\uFF0C\u5FC5\u987B\u4E3A x.5 \u624D\u80FD\u7ED8\u5236\u4E00\u5217\u5355\u72EC\u50CF\u7D20\uFF0C\n * \u5426\u5219\u4F1A\u56E0\u4E3A\u6297\u952F\u9F7F\uFF0C\u7ED8\u5236\u4E24\u5217\u50CF\u7D20\uFF0C\u4E14\u4E00\u4E2A\u4E3A\u534A\u900F\u660E\uFF0C\u5BFC\u81F4\u4E00\u79CD\u6A21\u7CCA\u7684\u6548\u679C\n *\n * \u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u5F97\u5230\u503C\u6700\u63A5\u8FD1\u7684 x.5 \u503C\u3002\n */\nexport const nearestPixelVal = (n: number) => {\n  const left = Math.floor(n);\n  const right = Math.ceil(n);\n  return (n - left < right - n ? left : right) + 0.5;\n};\n\n/**\n * \u4E24\u4E2A\u6570\u7EC4\u662F\u5426 \u201C\u76F8\u540C\u201D\uFF0C\u5F53\u4F5C\u96C6\u5408\u4E00\u6837\u6765\u5BF9\u6BD4\uFF0C\u5143\u7D20\u76F8\u540C\u5373\u53EF\u3002\n * \uFF08\u6570\u7EC4\u4E2D\u4E0D\u4F1A\u51FA\u73B0\u76F8\u540C\u5143\u7D20\uFF09\n */\n\nexport const isSameArray = (a1: unknown[], a2: unknown[]) => {\n  if (a1.length !== a2.length) return false;\n  const map = new Map<unknown, true>();\n  for (let i = 0, len = a1.length; i < len; i++) {\n    map.set(a1[i], true);\n  }\n  for (let i = 0, len = a2.length; i < len; i++) {\n    if (!map.get(a2[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * \u4FDD\u7559\u4E24\u4F4D\u5C0F\u6570\n * \u5982\u679C\u662F 0\uFF0C\u4E22\u5F03 0\n */\nexport const remainDecimal = (num: number, precision = 2) => {\n  return Number(num.toFixed(precision));\n};\n\n/**\n * \u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6570\u5B57\uFF0C\u5E76\u4FDD\u7559\u4E24\u4F4D\u5C0F\u6570\n */\nexport const parseToNumber = (str: string, precision = 2) => {\n  if (!str) return NaN;\n  const num = Number(str);\n  if (Number.isNaN(num)) {\n    return NaN;\n  }\n  return remainDecimal(num, precision);\n};\n\n/**\n * compare two arrays\n */\nexport const shallowCompareArrays = (a1: unknown[], a2: unknown[]) => {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0, len = a1.length; i < len; i++) {\n    if (a1[i] !== a2[i]) return false;\n  }\n  return true;\n};\n\nexport const getDevicePixelRatio = () => {\n  return window.devicePixelRatio || 1;\n};\n\nexport const calcCoverScale = (\n  w: number,\n  h: number,\n  cw: number,\n  ch: number,\n): number => {\n  if (w === 0 || h === 0) return 1;\n  const scaleW = cw / w;\n  const scaleH = ch / h;\n  const scale = Math.max(scaleW, scaleH);\n  return scale;\n};\n\n// find the closest value in sorted Array\n// (Thanks for Github copilot)\nexport const getClosestValInSortedArr = (\n  sortedArr: number[],\n  target: number,\n) => {\n  if (sortedArr.length === 0) {\n    throw new Error('sortedArr can not be empty');\n  }\n  if (sortedArr.length === 1) {\n    return sortedArr[0];\n  }\n\n  let left = 0;\n  let right = sortedArr.length - 1;\n\n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n\n    if (sortedArr[mid] === target) {\n      return sortedArr[mid];\n    } else if (sortedArr[mid] < target) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n\n  // check if left or right is out of bound\n  if (left >= sortedArr.length) {\n    return sortedArr[right];\n  }\n  if (right < 0) {\n    return sortedArr[left];\n  }\n\n  // check which one is closer\n  return Math.abs(sortedArr[right] - target) <=\n    Math.abs(sortedArr[left] - target)\n    ? sortedArr[right]\n    : sortedArr[left];\n};\n\nexport const isWindows = () => {\n  return (\n    navigator.platform.toLowerCase().includes('win') ||\n    navigator.userAgent.includes('Windows')\n  );\n};\n\nexport const escapeHtml = (str: string) => {\n  if (typeof str == 'string') {\n    return str.replace(/<|&|>/g, (matches) => {\n      return {\n        '<': '&lt;',\n        '>': '&gt;',\n        '&': '&amp;',\n      }[matches]!;\n    });\n  }\n  return '';\n};\n\nexport const getContentLength = (content: string) => {\n  let count = 0;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (const _ of content) {\n    count++;\n  }\n  return count;\n};\n\nexport const sliceContent = (content: string, start: number, end?: number) => {\n  let res = '';\n  let i = 0;\n  for (const char of content) {\n    if (end !== undefined && i >= end) {\n      break;\n    }\n    if (i >= start) {\n      res += char;\n    }\n    i++;\n  }\n  return res;\n};\n", "/**\n * EventEmitter\n *\n * Publish-Subscribe Design Pattern\n */\n\nexport class EventEmitter<T extends Record<string | symbol, any>> {\n  private eventMap: Record<keyof T, Array<(...args: any[]) => void>> =\n    {} as any;\n\n  on<K extends keyof T>(eventName: K, listener: T[K]) {\n    if (!this.eventMap[eventName]) {\n      this.eventMap[eventName] = [];\n    }\n    this.eventMap[eventName].push(listener);\n    return this;\n  }\n\n  emit<K extends keyof T>(eventName: K, ...args: Parameters<T[K]>) {\n    const listeners = this.eventMap[eventName];\n    if (!listeners || listeners.length === 0) return false;\n    listeners.forEach((listener) => {\n      listener(...args);\n    });\n    return true;\n  }\n\n  off<K extends keyof T>(eventName: K, listener: T[K]) {\n    if (this.eventMap[eventName]) {\n      this.eventMap[eventName] = this.eventMap[eventName].filter(\n        (item) => item !== listener,\n      );\n    }\n    return this;\n  }\n}\n\nexport default EventEmitter;\n", "import cloneDeep from 'lodash.clonedeep';\nimport debounce from 'lodash.debounce';\nimport isEqual from 'lodash.isequal';\nimport omit from 'lodash.omit';\nimport pick from 'lodash.pick';\nimport throttle from 'lodash.throttle';\n\nexport { cloneDeep, debounce, isEqual, omit, pick, throttle };\n"],
  "mappings": "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",
  "names": []
}
